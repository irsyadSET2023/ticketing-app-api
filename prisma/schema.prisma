// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int                  @id @default(autoincrement())
  email           String               @unique
  password        String?
  token           String?              @unique
  is_validate     Boolean              @default(false)
  username        String?              @unique
  role            Role?
  organization_id Int?
  organization    Organization?        @relation(fields: [organization_id], references: [id])
  assigned_ticket UserAssignedTicket[]
  created_at      DateTime             @default(now())
  updated_at      DateTime             @default(now())
}

model Organization {
  id         Int      @id @default(autoincrement())
  name       String?
  api_key    String?  @unique
  users      User[]
  tickets    Ticket[]
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Ticket {
  id                Int                  @id @default(autoincrement())
  category          Category?
  message           String?
  platform          String?
  sender_email      String?
  status            Status?
  organization_id   Int?
  organization      Organization?        @relation(fields: [organization_id], references: [id], onDelete: Cascade)
  assigned_to       UserAssignedTicket[]
  created_at        DateTime             @default(now())
  updated_at        DateTime             @default(now())
}

model UserAssignedTicket {
  id                 Int      @id @default(autoincrement())
  user_id            Int
  user               User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  ticket_id          Int 
  ticket             Ticket   @relation(fields: [ticket_id], references: [id], onDelete: Cascade)
  remarks            String?
  created_at         DateTime @default(now())
  updated_at         DateTime @default(now())
}

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
}

enum Category {
  LOW
  MEDIUM
  IMPORTANT
}

enum Status{
  Pending
  Processed
  Resolved
}


